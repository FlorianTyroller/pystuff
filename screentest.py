from PIL import ImageGrab, Image, ImageDraw
import time
from tkinter import *
import cv2
import numpy as np
import pyautogui


width=1920
height=1080
qLen = 5
step = 1
xBound = width//2 - qLen//2
yBound = height//2 - qLen//2
a=0
c = False
while True:
    c = True
    #a+=1
    im = ImageGrab.grab(bbox=(xBound,yBound,xBound+qLen,yBound+qLen))
    print(im.size)
    pixels = [[im.getpixel((x, y)) for x in range(0, qLen, step)] for y in range(0, qLen, step)]
    for y in range(len(pixels)):
        if c:
            for x in range(len(pixels[y])):  
                if pixels[y][x][2] < 40 and pixels[y][x][1] < 40 and pixels[y][x][0] > 100:
                    #print(pixels[y][x])
                    #if a%100==0:
                    pyautogui.click()
                    c=False
                    break
        else:
            break


    #print(pixels)
    #printscreen =  np.array(im)
    #cv2.imshow('window',cv2.cvtColor(printscreen, cv2.COLOR_BGR2RGB))
    #if cv2.waitKey(25) & 0xFF == ord('q'):
    #        cv2.destroyAllWindows()
    #        break


'''
[[(111, 118, 186), (112, 119, 188), (111, 118, 185), (129, 78, 117), (159, 15, 18), (38, 25, 43), (32, 32, 56), (42, 44, 78), (87, 39, 65), (188, 15, 15)], 
[(106, 112, 179), (106, 112, 179), (108, 113, 179), (134, 75, 114), (192, 13, 13), (142, 16, 20), (138, 18, 23), (142, 20, 27), (162, 19, 25), (188, 15, 15)], 
[(101, 103, 162), (101, 103, 162), (104, 105, 163), (133, 71, 106), (195, 13, 13), (165, 17, 17), (147, 22, 23), (141, 24, 25), (141, 24, 25), (135, 27, 27)], 
[(95, 89, 135), (96, 91, 138), (99, 94, 141), (129, 65, 91), (191, 14, 14), (123, 27, 27), (99, 42, 43), (92, 49, 51), (92, 49, 51), (92, 51, 52)], 
[(92, 65, 92), (99, 71, 100), (103, 74, 103), (130, 53, 69), (188, 15, 15), (100, 36, 37), (95, 65, 65), (97, 76, 79), (97, 76, 79), (97, 76, 79)], 
[(186, 17, 18), (186, 17, 19), (188, 17, 19), (191, 16, 17), (188, 15, 15), (100, 36, 36), (95, 65, 65), (97, 76, 79), (97, 75, 78), (97, 75, 78)], 
[(153, 20, 20), (128, 27, 27), (120, 30, 30), (120, 30, 30), (117, 32, 32), (89, 49, 49), (94, 68, 69), (97, 75, 78), (97, 75, 78), (97, 76, 78)], 
[(133, 23, 23), (101, 34, 34), (91, 39, 39), (91, 39, 39), (91, 39, 40), (87, 46, 46), (89, 60, 61), (94, 70, 72), (97, 75, 78), (97, 75, 78)], 
[(153, 19, 20), (128, 27, 27), (120, 29, 30), (120, 29, 30), (120, 29, 30), (120, 29, 30), (103, 40, 41), (94, 57, 58), (94, 71, 73), (97, 75, 78)], 
[(180, 15, 17), (183, 16, 19), (186, 17, 21), (188, 18, 21), (188, 17, 20), (198, 12, 13), (153, 19, 20), (107, 37, 38), (87, 61, 62), (97, 75, 78)]]
'''